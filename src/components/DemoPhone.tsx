/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Imaginequad (https://sketchfab.com/Imaginequad)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/google-pixel-7-pro-3d5d6ad9b86c462f94bf1d0b08295b30
Title: Google Pixel 7 Pro
*/
import {useRef, useEffect} from "react"
import {useGLTF, useVideoTexture} from '@react-three/drei'
import {DemoPhoneProps, DemoPhoneGLTF} from "../types.ts"
import * as THREE from "three"
import {useGSAP} from "@gsap/react"
import gsap from "gsap"

export default function DemoPhone({texture}: DemoPhoneProps) {

  const group = useRef<THREE.Group>(null)
  const { nodes, materials } = useGLTF('/models/google_pixel_7_pro.glb') as DemoPhoneGLTF
  const txt = useVideoTexture(texture ? texture : '/textures/project/sqlite-browser.mp4')

  useEffect(() => {
    if (txt) {
      txt.flipY = false
    }
  }, [txt])

  useGSAP(() => {
    // @ts-expect-error/ possible nulls can not be addressed, but we know it is not null
    gsap.from(group?.current?.rotation, {
      y: Math.PI / 2,
      duration: 1,
      ease: 'power3.out'
    })
  }, [txt])

  return (
    <group ref={group} dispose={null}>
      <group position={[-0.038, 0.081, -0.009]}>
        <mesh geometry={nodes.Object_4.geometry} material={materials['Material.003']}/>
        <mesh geometry={nodes.Object_5.geometry} material={materials['Material.018']}/>
        <mesh geometry={nodes.Object_6.geometry} material={materials['Material.019']}/>
        <mesh geometry={nodes.Object_7.geometry} material={materials['Material.020']}/>
        <mesh geometry={nodes.Object_8.geometry} material={materials['Material.033']}/>
        <mesh geometry={nodes.Object_9.geometry} material={materials['Material.032']}/>
        <mesh geometry={nodes.Object_10.geometry} material={materials['Material.031']}/>
        <mesh geometry={nodes.Object_11.geometry} material={materials['Material.030']}/>
        <mesh geometry={nodes.Object_12.geometry} material={materials.Flash}/>
        <mesh geometry={nodes.Object_13.geometry} material={materials['Material.050']}/>
        <mesh geometry={nodes.Object_14.geometry} material={materials['Google.002']}/>
        <mesh geometry={nodes.Object_15.geometry} material={materials.Lens}/>
        <mesh geometry={nodes.Object_16.geometry} material={materials.Frame}/>
        <mesh geometry={nodes.Object_17.geometry} material={materials['Material.006']}/>
        <mesh geometry={nodes.Object_18.geometry} material={materials['Material.011']}/>
        <mesh geometry={nodes.Object_19.geometry} material={materials['Material.001']}/>
        <mesh geometry={nodes.Object_20.geometry} material={materials['Material.002']}/>
        <mesh geometry={nodes.Object_21.geometry} material={materials['Material.021']}/>
      </group>
    </group>
  )
}

useGLTF.preload('/models/google_pixel_7_pro.glb')